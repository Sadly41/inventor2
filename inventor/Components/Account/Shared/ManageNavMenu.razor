@using Microsoft.AspNetCore.Identity
@using inventor.Data

@inject SignInManager<ApplicationUser> SignInManager

@*<ul class="navbar-nav ml-auto">
<button type="submit" class="w-100 btn btn-lg btn-primary">Update password</button>

*@
<ul class="navbar" style="display: flex; ">
    <a href='Account/Manage' class="btn btn-outline-dark" role="button">
        Профиль
    </a>
    <a href='Account/Manage/Email' class="btn btn-outline-dark" role="button">
        Почта
    </a>
    <a href='Account/Manage/ChangePassword' class="btn btn-outline-dark" role="button">
        Смена пароля
    </a>
    <a href='Account/Manage/inventory2' class="btn btn-outline-dark" role="button">
        Инвентаризация
    </a>







  
    @*
    @if (hasExternalLogins)
    {
        <li class="nav-item">
            <NavLink class="nav-link" href="Account/Manage/ExternalLogins">External logins</NavLink>
        </li>
    }
    <li class="nav-item">
        <NavLink class="nav-link" href="Account/Manage/TwoFactorAuthentication">Two-factor authentication</NavLink>
    </li>
    <li class="nav-item">
        <NavLink class="nav-link" href="Account/Manage/PersonalData">Personal data</NavLink>
    </li>
    *@
</ul>

@code {
    private bool hasExternalLogins;

    protected override async Task OnInitializedAsync()
    {
        hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
    }
}
